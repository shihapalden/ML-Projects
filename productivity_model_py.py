# -*- coding: utf-8 -*-
"""productivity_model.py

Automatically generated by Colab.

Original file is located at
    https://colab.research.google.com/drive/1THRz4H1MECFZR8eb3d8TRcUydyymofFq
"""

import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import r2_score, mean_squared_error

data = pd.read_csv('mental_health_productivity_dataset.csv')
data.head()

print(data.info())

print(data.describe())

plt.figure(figsize=(8, 6))
sns.heatmap(data.corr(), annot=True, cmap='coolwarm', fmt='.2f')
plt.title('Correlation Matrix')
plt.show()

X = data.drop('Productivity_Score', axis=1)
Y = data['Productivity_Score']
X_train, X_test, Y_train, Y_test = train_test_split(X, Y, test_size=0.2, random_state=42)

print(f'Training Samples: {len(X_train)}')
print(f'Test Samples: {len(Y_test)}')

model = LinearRegression()
model.fit(X_train, Y_train)

print('Intercept:', model.intercept_)
print('Cofficients', model.coef_)

Y_pred = model.predict(X_test)

r2 = r2_score(Y_test, Y_pred)

n = X_test.shape[0]
p = X_test.shape[1]
adj_r2 = 1-(1 - r2) * (n - 1) / (n - p - 1)

mse =  mean_squared_error(Y_test, Y_pred)
rmse = np.sqrt(mse)
print(f"R²: {r2:.4f}")
print(f"Adjusted R²: {adj_r2:.4f}")
print(f"MSE: {mse:.4f}")
print(f"RMSE: {rmse:.4f}")

new_data = pd.DataFrame([{
    'Sleep_Hours': 7.5,
    'Stress_Level': 3.0,
    'Physical_Activity_Min': 60,
    'Work_Hours': 7.5,
    'Mood_Score': 8.5
}])

predicted_score = model.predict(new_data)
clipped_score = np.clip(predicted_score[0], 0, 100)
print(f"Predicted Productivity Score: {clipped_score:.2f}")